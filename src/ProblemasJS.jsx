import ScrollTela from "./ScrollTela";
import './css/MeuBlog.css';
import { useRef } from "react";

function ProblemasJS () {
    const topicosRef = {
        topico1: useRef(null),
        topico2: useRef(null),
        topico21: useRef(null),
        topico22: useRef(null),
        topico3: useRef(null),
        topico4: useRef(null),
        topico5: useRef(null),
    };

    const scrollTopico = (topico) => {
        topicosRef[topico]?.current?.scrollIntoView({behavior: 'smooth'});
        setTimeout(() => {
            window.scrollTo({
                top: window.scrollY - 70,
                behavior: 'smooth'
            });
        }, 1000);
    };

    return (
        <>
            <ScrollTela>
            <div className="general-infos">
                <h1 className="titulo-info-blog">Como Resolver Problemas em JavaScript no Beecrowd ‚úÖ</h1>
                <p className="data-post">29/05/2025</p>
                <div className="two-images">
                    <img alt="Beecrowd" src="/images/beecrowd-artigo.jpg"/>
                    <h1>+</h1>
                    <img alt="JavaScript" src="/images/js-artigo.jpg"/>
                </div>
            
                <div className="alinhamento-topicos">
                    <div className="topicos">
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico1'); }} className="nivel1"><span>1¬∫</span> Contextualiza√ß√£o</a>
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico2'); }} className="nivel1"><span>2¬∫</span> Ferramentas Necess√°rias</a>
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico21'); }} className="nivel2"><span>2.1</span> VS Code</a>
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico22'); }} className="nivel2"><span>2.2</span> Node.js</a>
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico3'); }} className="nivel1"><span>3¬∫</span> Estrutura</a>
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico4'); }} className="nivel1"><span>4¬∫</span> Como Resolver</a>
                        <a href="#" onClick={(e) => { e.preventDefault(); scrollTopico('topico5'); }} className="nivel1"><span>5¬∫</span> Como Submeter</a>
                    </div>
                </div>
                <section ref={topicosRef.topico1}></section>
                <h3 className="titulo-paragrafo">1¬∫ Contextualiza√ß√£o</h3>
                <p className="texto-info">Na minha primeira experi√™ncia querendo resolver os exerc√≠cios do Beecrowd com JavaScript, tive uma mini dor de cabe√ßa: ‚ÄúComo eu resolvo esses exerc√≠cios na minha m√°quina?‚Äù Pois o JS n√£o tem um comando em si para entrada de dados pelo terminal/teclado e, quem conhece, sabe que nos exerc√≠cios do Beecrowd geralmente a entrada de dados √© obtida pelo pr√≥prio terminal.<br/><br/></p> 
                <p className="texto-info">Num primeiro momento de estresse, resolvi n√£o realizar esses exerc√≠cios simplesmente por esse fato. Dias depois, fui atr√°s de aprender como resolver aquilo e, hoje em dia, consigo utilizar na maior tranquilidade e vejo que √© simples. <br/><br/> √â esse conhecimento que trago hoje aqui para voc√™s.</p>
                <section ref={topicosRef.topico2}></section>
                <h3 className="titulo-paragrafo">2¬∫ Ferramentas Necess√°rias</h3>
                <p className="texto-info">Primeiramente, s√£o necess√°rias duas ferramentas b√°sicas: um editor de c√≥digo (VS Code) e um ambiente de execu√ß√£o JavaScript fora de um navegador web, que √© o Node.js. Caso j√° tenha as duas ferramentas instaladas e configuradas, pule para o pr√≥ximo t√≥pico.</p>
                <section ref={topicosRef.topico21}></section>
                <h3 className="titulo-paragrafo">2.1¬∫ VS Code</h3>
                <p className="texto-info">O Visual Studio Code √© o mais famoso/popular atualmente entre os programadores, logo, darei a dica utilizando ele.<br/><br/>
Para baix√°-lo √© simples, basta ir em seu <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">site oficial</a> e clicar em fazer o download, considerando seu sistema operacional.
Os passos de instala√ß√£o s√£o bem simples, ent√£o n√£o entrarei em muitos detalhes aqui.</p>
                <section ref={topicosRef.topico22}></section>
                <h3 className="titulo-paragrafo">2.2¬∫ Node.js</h3>
                <p className="texto-info">Precisamos do Node.js tamb√©m, que √© o mais fundamental, permitindo-nos executar JS no nosso VS Code.<br/><br/>
Para baix√°-lo, basta entrar no <a href="https://nodejs.org/pt" target="_blank" rel="noopener noreferrer">site do Node.js</a> e fazer o download da vers√£o LTS, que √© a mais recomendada.
Siga os passos de instala√ß√£o deixando as configura√ß√µes padr√£o, e n√£o tem segredo: voc√™ ter√° a ferramenta instalada em sua m√°quina.</p>
                <section ref={topicosRef.topico3}></section>
                <h3 className="titulo-paragrafo">3¬∫ Estrutura</h3>
                <p className="texto-info">Top! Agora, com tudo pronto para iniciar a resolu√ß√£o dos exerc√≠cios, temos a estrutura padr√£o que eu costumo seguir, o que facilita bastante na hora de resolver cada um deles.<br/><br/>
Primeiro, √© necess√°rio criar uma pasta geral para armazenar todos os exerc√≠cios que iremos resolver. Basta criar uma pasta com um nome apropriado, por exemplo:
                <div className="cada-image">
                    <img className="images-artigo" alt="Pasta" src="/images/pasta-artigo.png"/><br/><br/>
                </div>
Com a pasta criada, abrimos o VS Code dentro dela para dar in√≠cio ao projeto. Dentro dessa pasta principal, criamos outras pastas, cada uma representando um exerc√≠cio espec√≠fico ‚Äî isso ajuda a manter tudo mais organizado:
                <div className="cada-image">
                    <img className="images-artigo" alt="Dentro do Vscode" src="/images/vs-artigo.png"/><br/><br/>
                </div>
Agora, em cada pasta de exerc√≠cio que formos resolver, devem existir dois arquivos: o arquivo <strong>stdin</strong>, que representa a entrada de dados do exerc√≠cio (simulando a entrada via terminal), e o arquivo <strong>xxxx.js</strong>, cujo n√∫mero corresponde ao do exerc√≠cio e onde ser√° escrita a solu√ß√£o em JavaScript. Ao final, como exemplo, a estrutura fica assim:</p>
                <div className="cada-image">
                    <img className="images-artigo" alt="Dentro do Vscode" src="/images/vs2-artigo.png"/><br/><br/>
                </div>
                <section ref={topicosRef.topico4}></section>
                <h3 className="titulo-paragrafo">4¬∫ Como Resolver</h3>
                <p className="texto-info">Vamos agora para a parte de como resolver os exerc√≠cios. No Beecrowd, acessamos o problema desejado e selecionamos a linguagem JavaScript. Em seguida, copiamos as duas primeiras linhas fornecidas pelo site (o que est√° em vermelho no print abaixo) ‚Äî elas s√£o respons√°veis por permitir a leitura de dados via o arquivo stdin ‚Äî e colamos no nosso arquivo.js.
                <div className="cada-image">
                    <img className="img-longa" alt="Problema no Beecrowd" src="/images/vs3-artigo.png"/><br/><br/>
                </div>
Depois, adaptamos a entrada para a nossa estrutura de pastas local, que √© um pouco mais simples. Aten√ß√£o: a cada novo exerc√≠cio, esse trecho precisa ser ajustado para refletir corretamente o n√∫mero/pasta do problema.
Na sequ√™ncia, copiamos os dados de entrada fornecidos pelo exerc√≠cio e colamos no arquivo stdin.
                <div className="cada-image">
                    <img className="img-longa" alt="No Vs Code" src="/images/vs4-artigo.png"/><br/><br/>
                </div>
Pronto! Com isso, a estrutura est√° completa: a entrada de dados funcionar√° normalmente, e podemos come√ßar a resolver os exerc√≠cios.<br/><br/>
Lembre-se de que a tipagem em JavaScript √© din√¢mica. Isso significa que, quando o problema exigir um tipo de dado espec√≠fico como int ou float, voc√™ precisar√° fazer a convers√£o explicitamente antes de utilizar os valores.<br/><br/>
Tamb√©m √© importante se atentar ao m√©todo array.split(), que ser√° muito utilizado para processar corretamente a entrada dos exerc√≠cios.</p>
                <section ref={topicosRef.topico5}></section>
                <h3 className="titulo-paragrafo">5¬∫ Como Submeter</h3>
                <p className="texto-info">Ok! Agora vamos supor que voc√™ resolveu um exerc√≠cio e quer submet√™-lo no Beecrowd. √â simples: copie o c√≥digo do seu arquivo.js e cole na √°rea de solu√ß√£o do problema, na p√°gina do Beecrowd.
Mas aten√ß√£o! Existe um detalhe importante: deixe as duas primeiras linhas que j√° aparecem na √°rea de c√≥digo do Beecrowd e n√£o copie as duas primeiras linhas do seu arquivo.
                <div className="cada-image">
                    <img className="img-longa" alt="Problema no Beecrowd" src="/images/vs5-artigo.png"/><br/><br/>
                </div>
O que est√° em vermelho n√£o muda e o que est√° em amarelo √© sua solu√ß√£o.<br/><br/>
Isso √© necess√°rio porque a entrada de dados no Beecrowd funciona apenas com o caminho de leitura que eles especificam. Ou seja, basta manter aquele trecho inicial fornecido por eles, e o restante do seu c√≥digo funcionar√° normalmente.<br/><br/>
E pronto! Submeta seu exerc√≠cio e veja se acertouüò∏.<br/><br/>
Para a resposta de alguns exerc√≠cios confira meu <a href="https://github.com/LensBalan/Exercicios-JS-Beecrowd" target="_blank" rel="noopener noreferrer">reposit√≥rio com as solu√ß√µes.</a></p>
            </div>
            </ScrollTela>
        </>
    );
}

export default ProblemasJS